import {Input} from '@chakra-ui/react'
import Head from 'next/head'
import {useState} from 'react'
import ButtonComponent from '../src/components/ButtonComponent'
import EventCard from '../src/components/EventCard'
import styles from '../styles/Home.module.css'

export default function Home() {
	const [name, setName] = useState('')
	const [city, setCity] = useState('')
	const [events, setEvents] = useState([])
	function handleNameChange(e) {
		setName(e.target.value)
	}
	function handleCityChange(e) {
		setCity(e.target.value)
	}
	async function handleClick() {
		await fetchEvents(city, name)
		setCity('')
		setName('')
	}
	async function fetchEvents(city, name) {
		const url =
			city.length > 0 || name.length > 0
				? `https://app.ticketmaster.com/discovery/v2/events.json?size=10&apikey=${process.env.NEXT_PUBLIC_API_KEY}&city=${city}&keyword=${name}`
				: `https://app.ticketmaster.com/discovery/v2/events.json?size=10&apikey=${process.env.NEXT_PUBLIC_API_KEY}&countryCode=GB`
		try {
			const response = await fetch(url)
			const data = await response.json()
			setEvents(data._embedded.events)
			console.log({city, name})
		} catch (error) {
			console.log(error)
		}
	}
	return (
		<div className={styles.container}>
			<Head>
				<title>Event Finder</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}> Event Finder</h1>
				<Input
					onChange={handleNameChange}
					type='text'
					size='sm'
					variant='filled'
					placeholder='Event ...'
					width='30%'
					value={name}
				/>
				<Input
					onChange={handleCityChange}
					type='text'
					size='sm'
					variant='filled'
					placeholder='City...'
					width='30%'
					value={city}
				/>
				<ButtonComponent
					colorScheme='teal'
					size='sm'
					handleClick={e => {
						handleClick(e)
					}}
					text='Search'
				/>
				<div className={styles.events}>
					{!events ? (
						<h2>no event</h2>
					) : (
						events.map(event => {
							return <EventCard key={event.id} event={event} />
						})
					)}
				</div>
			</main>
		</div>
	)
}
