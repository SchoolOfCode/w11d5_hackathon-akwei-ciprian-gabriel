import {Input} from '@chakra-ui/react'
import Head from 'next/head'
import {useEffect, useState} from 'react'
import ButtonComponent from '../src/components/ButtonComponent'
import EventCard from '../src/components/EventCard'
import styles from '../styles/Home.module.css'

export default function Home() {
	const [name, setName] = useState('')
	const [city, setCity] = useState('')
	const [isLoading, setIsLoading] = useState(false)
	const [error, setError] = useState(null)
	const [events, setEvents] = useState(null)
	function handleNameChange(e) {
		setName(e.target.value)
	}
	function handleCityChange(e) {
		setCity(e.target.value)
	}
	async function handleClick() {
		await fetchEvent(city, name)
		setCity('')
		setName('')
	}
	async function fetchEvent(city, name) {
		setIsLoading(true)

		const url =
			city.length > 0 || name.length > 0
				? `https://app.ticketmaster.com/discovery/v2/events.json?size=20&apikey=${process.env.NEXT_PUBLIC_API_KEY}&city=${city}&keyword=${name}`
				: `https://app.ticketmaster.com/discovery/v2/events.json?size=20&apikey=${process.env.NEXT_PUBLIC_API_KEY}&countryCode=GB`
		try {
			const response = await fetch(url) //, {mode: 'no-cors'}
			const data = await response.json()
			setEvents(data._embedded.events)
			setError(null)

			setIsLoading(false)
		} catch (err) {
			setError(err)
			setEvents(null)

			console.log(error)
		}
	}
	useEffect(() => {
		async function fetchEvents() {
			setIsLoading(true)

			const url = `https://app.ticketmaster.com/discovery/v2/events.json?size=20&apikey=${process.env.NEXT_PUBLIC_API_KEY}&countryCode=GB&sort=random`
			try {
				const response = await fetch(url) //, {mode: 'no-cors'}
				const data = await response.json()
				setEvents(data._embedded.events)
				setError(null)

				setIsLoading(false)
			} catch (err) {
				setError(err)
				setEvents(null)

				// console.log(error)
			}
		}
		fetchEvents()
	}, [])
	return (
		<div className={styles.container}>
			<Head>
				<title>Event Finder</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main className={styles.main}>
				<h1 className={styles.title}> Event Finder</h1>
				<div className={styles.inputs}>
					<Input
						onChange={handleNameChange}
						type='text'
						size='sm'
						variant='filled'
						placeholder='Event ...'
						// width='25%'
						value={name}
					/>
					<Input
						onChange={handleCityChange}
						type='text'
						size='sm'
						variant='filled'
						placeholder='City...'
						// width='25%'
						value={city}
					/>
					<ButtonComponent
						colorScheme='teal'
						size='sm'
						handleClick={e => {
							handleClick(e)
						}}
						text='Search'
					/>
				</div>
				<div className={styles.events}>
					{events?.length > 0 &&
						!isLoading &&
						events.map(event => {
							return <EventCard key={event.id} event={event} />
						})}
				</div>
			</main>
		</div>
	)
}
